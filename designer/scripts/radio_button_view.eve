layout radio_button_view
{
    view dialog(placement: place_column)
    {
        edit_text(name: "name", bind: @name, alt: 'The text that appears to the right of the radio_button.');
        edit_text(name: "alt", bind: @alt, alt: 'The tooltip text that appears when the cursor hovers over the radio_button.');
        edit_text(name: "bind", bind: @bind, alt: 'The cell in the Adam property sheet to which this view is bound.  If this is defined, bind_controller and bind_view are ignored.');
        edit_text(name: "bind_controller", bind: @bind_controller, alt: 'The "controller" half of the binding to the cell in the Adam property sheet.  This is the half of the cell binding that covers assignment to the bound cell.');
        edit_text(name: "bind_view", bind: @bind_view, alt: 'The "view" half of the binding to the cell in the Adam property sheet.  This is the half of the cell binding that covers assignment to the Eve view from the bound cell.');
        edit_text(name: "value", bind: @value, alt: 'The value emitted when checking the radio_button.');
        popup(name: "style", bind: @style, items: @styles, alt: 'The style in which to render the radio_button.  The style must be one of xbox, checkbox, radio, button, round_button, top_attached_tab, or top_detached_tab.');
        edit_text(name: "signal_id", bind: @signal_id, alt: 'The name to supply to the widget_id parameter of the signal handler.');
        edit_text(name: "bind_checked_signal", bind: @bind_checked_signal, alt: 'Binds GG::StateButton::CheckedSignal.  The value emitted is the value emitted by the radio_button.');

        reveal(name: "Layout Parameters", bind: @show_layout);
        optional(bind: @show_layout)
        {
            popup(name: "horizontal", bind: @horizontal, items: @horizontal_alignments, alt: 'The horizontal alignment of this view in its available space.');
            popup(name: "vertical", bind: @vertical, items: @vertical_alignments, alt: 'The vertical alignment of this view in its available space.');
            edit_number(name: "indent", bind: @indent, alt: 'The horizontal indentation of this view within its available space.  If the view is aligned left, the indentation pushes it right, and vice versa.');
            edit_text(name: "margin", bind: @margin, alt: 'An array of four numbers specifying the margin of space that should be placed around this view (in the order left, top, right, bottom), or a single number for all four values.');
        }

        reveal(name: "Colors", bind: @show_colors);
        optional(bind: @show_colors)
        {
            color_button(name: "color", bind: @color, alt: 'The color in which to render the radio_button.');
            color_button(name: "text_color", bind: @text_color, alt: 'The color in which to render the radio_button label.');
            color_button(name: "interior_color", bind: @interior_color, alt: 'The color in which to render the interior of the radio_button.');
        }
    }
}
