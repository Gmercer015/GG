layout popup_view
{
    view dialog(placement: place_column)
    {
        edit_text(name: "name", bind: @name, alt: 'The text label that appears to the left of the popup.');
        edit_text(name: "alt", bind: @alt, alt: 'The tooltip text that appears when the cursor hovers over the popup.');
        edit_text(name: "bind", bind: @bind, alt: 'The cell in the Adam property sheet to which this view is bound.  If this is defined, bind_controller and bind_view are ignored.');
        edit_text(name: "bind_controller", bind: @bind_controller, alt: 'The "controller" half of the binding to the cell in the Adam property sheet.  This is the half of the cell binding that covers assignment to the bound cell.');
        edit_text(name: "bind_view", bind: @bind_view, alt: 'The "view" half of the binding to the cell in the Adam property sheet.  This is the half of the cell binding that covers assignment to the Eve view from the bound cell.');
        edit_text(name: "items", bind: @items, lines: 5, alt: 'An array of dictionaries.  Each dictionary has a name and a value element defining an item in the popup -- each name appears in the popup, and each value is the value emitted when the item is selected in the popup.  A single name may be specified for items instead of an array.  In this case, the name specifies a cell in the Adam property sheet that will be used to supply the popup items.');
        edit_text(name: "custom_item_name", bind: @custom_item_name, alt: 'The name of the custom item in the popup.');
        edit_number(name: "max_characters", bind: @max_characters, alt: 'The width of the popup, in number of characters.');
        edit_text(name: "signal_id", bind: @signal_id, alt: 'The name to supply to the widget_id parameter of eve_signal_handler.');
        edit_text(name: "bind_selection_changed_signal", bind: @bind_selection_changed_signal, alt: 'Binds GG::DropDownList::SelChangedSignal.  The value emitted is the value emitted by the popup.');

        reveal(name: "Layout Parameters", bind: @show_layout);
        optional(bind: @show_layout)
        {
            popup(name: "horizontal", bind: @horizontal, items: @horizontal_alignments, alt: 'The horizontal alignment of this view in its available space.');
            popup(name: "vertical", bind: @vertical, items: @vertical_alignments, alt: 'The vertical alignment of this view in its available space.');
            edit_number(name: "indent", bind: @indent, alt: 'The horizontal indentation of this view within its available space.  If the view is aligned left, the indentation pushes it right, and vice versa.');
            edit_text(name: "margin", bind: @margin, alt: 'An array of four numbers specifying the margin of space that should be placed around this view (in the order left, top, right, bottom), or a single number for all four values.');
        }

        reveal(name: "Colors", bind: @show_colors);
        optional(bind: @show_colors)
        {
            color_button(name: "color", bind: @color, alt: 'The color in which to render the popup.');
            color_button(name: "label_color", bind: @label_color, alt: 'The color in which to render the label text.');
            color_button(name: "item_text_color", bind: @item_text_color, alt: 'The color in which to render the text of the items in the popup.');
        }
    }
}
