layout reveal_view
{
    view dialog(placement: place_column)
    {
        edit_text(name: "name", bind: @name, alt: 'The text that appears to the right of the reveal.');
        edit_text(name: "alt", bind: @alt, alt: 'The tooltip text that appears when the cursor hovers over the reveal.');
        edit_text(name: "bind", bind: @bind, alt: 'The cell in the Adam property sheet to which this view is bound.  If this is defined, bind_controller and bind_view are ignored.');
        edit_text(name: "bind_controller", bind: @bind_controller, alt: 'The "controller" half of the binding to the cell in the Adam property sheet.  This is the half of the cell binding that covers assignment to the bound cell.');
        edit_text(name: "bind_view", bind: @bind_view, alt: 'The "view" half of the binding to the cell in the Adam property sheet.  This is the half of the cell binding that covers assignment to the Eve view from the bound cell.');
        edit_text(name: "value_on", bind: @value_on, alt: 'The value associated with the "show" state of the reveal.');
        edit_text(name: "showing_unpressed", bind: @showing_unpressed, alt: "The unpressed graphic to use to render the reveal's showing-button.");
        edit_text(name: "showing_rollover", bind: @showing_rollover, alt: "The rollover graphics to use to render the reveal's showing-button.");
        edit_text(name: "showing_pressed", bind: @showing_pressed, alt: "The pressed graphic to use to render the reveal's showing-button.");
        edit_text(name: "hiding_unpressed", bind: @hiding_unpressed, alt: "The unpressed graphic to use to render the reveal's hiding-button.");
        edit_text(name: "hiding_rollover", bind: @hiding_rollover, alt: "The rollover graphics to use to render the reveal's hiding-button.");
        edit_text(name: "hiding_pressed", bind: @hiding_pressed, alt: "The pressed graphic to use to render the reveal's hiding-button.");

        reveal(name: "Layout Parameters", bind: @show_layout);
        optional(bind: @show_layout)
        {
            popup(name: "horizontal", bind: @horizontal, items: @horizontal_alignments, alt: 'The horizontal alignment of this view in its available space.');
            popup(name: "vertical", bind: @vertical, items: @vertical_alignments, alt: 'The vertical alignment of this view in its available space.');
            edit_number(name: "indent", bind: @indent, alt: 'The horizontal indentation of this view within its available space.  If the view is aligned left, the indentation pushes it right, and vice versa.');
            edit_text(name: "margin", bind: @margin, alt: 'An array of four numbers specifying the margin of space that should be placed around this view (in the order left, top, right, bottom), or a single number for all four values.');
        }

        reveal(name: "Colors", bind: @show_colors);
        optional(bind: @show_colors)
        {
            color_button(name: "label_color", bind: @label_color, alt: "The color in which to render the reveal's label.");
            edit_text(name: "bind_label_color", bind: @bind_label_color, alt: "The name of the Adam cell to which to bind the color in which to render the reveal's label.");
        }
    }
}
